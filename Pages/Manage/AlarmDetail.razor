@page "/manage/alarms/alarm"
﻿@using System.Net.Http.Json
@using Microsoft.AspNetCore.WebUtilities
@using ManagedPower.Portal.Components
@inject NavigationManager NavManager
@inject HttpClient httpClient
@inject IDialogService DialogService


@using System.Text.RegularExpressions

<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
    	<Header>
            <MudMenu Icon="@Icons.Material.Filled.MoreVert">
    <MudMenuItem OnClick="@( () => CloseAlarm() )">Close Alarm</MudMenuItem>
    <MudMenuItem OnClick="@( () => DeleteAlarm() )">Delete Alarm</MudMenuItem>
        </MudMenu>
	    </Header>
        <ChildContent>
    <MudTabPanel Text="Alarm Detail" Style="text-transform: none;">
        <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
            <MudTextField Class="mt-4" ReadOnly="true" T="string" Label="ID" Text="@ThisAlarm.id.ToString()" />
            <MudTextField Class="mt-4" ReadOnly="true" T="string" Label="Error" Text="@ThisAlarm.error" />
            <MudTextField Class="mt-4" ReadOnly="true" T="string" Label="Severity" Text="@ThisAlarm.severityName" />
            <MudTextField Class="mt-4" ReadOnly="true" T="string" Label="Alarm Count" Text="@ThisAlarm.alarmCount.ToString()" />
            <MudTextField Class="mt-4" ReadOnly="true" T="string" Label="First Alert" Text="@ThisAlarm.firstAt.ToString()" />
            <MudTextField Class="mt-4" ReadOnly="true" T="string" Label="Latest Alert" Text="@ThisAlarm.lastAt.ToString()" />
            <MudTextField Class="mt-4" ReadOnly="true" T="string" Label="Status" Text="@ThisAlarm.statusName" />
            <MudTextField Class="mt-4" ReadOnly="true" T="string" Label="Alarm Detail" Text="@ThisAlarm.message" />
            @if (ThisAlarm.closedAt.HasValue)
           {
                <MudTextField Class="mt-4" ReadOnly="true" T="string" Label="Closed At" Text="@ThisAlarm.closedAt.ToString()" />

            }
            else
            {
             <MudTextField Class="mt-4" ReadOnly="true" T="string" Label="Closed At" Text="N/A" />

            }
        </MudForm>

    </MudTabPanel>
    </ChildContent>
</MudTabs>


@code
{
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;

    List<ManagedPower.SDK.Models.API.Alarm> AllAlarms = new();
    ManagedPower.SDK.Models.API.Alarm ThisAlarm = new();

    protected override async Task OnInitializedAsync()
    {
        AllAlarms = httpClient.GetFromJsonAsync<List<ManagedPower.SDK.Models.API.Alarm>>("http://cluw12q05.macsstores.com/managedpower/alarms/").Result;


        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("id", out var alarmid))
        {
            var id = Convert.ToInt32(alarmid);
            ThisAlarm = AllAlarms.FirstOrDefault(x => x.id == id);

        }
    }

    async void CloseAlarm()
    {
   bool? result = await DialogService.ShowMessageBox(
    "Are you sure?",
    "Are you sure you'd like to close this alarm?",
    yesText: "Yes",noText:"Cancel");
    }

    async void DeleteAlarm()
    {
           bool? result = await DialogService.ShowMessageBox(
    "Are you sure?",
    "Are you sure you'd like to delete this alarm? This cannot be undone.",
    yesText: "Yes",noText:"Cancel");
    }

}