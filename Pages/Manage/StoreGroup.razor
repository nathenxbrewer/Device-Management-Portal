@page "/manage/storegroup"
﻿@using System.Net.Http.Json
@using ManagedPower.SDK.Models.API
@using Microsoft.AspNetCore.WebUtilities
@using ManagedPower.Portal.Components
@inject NavigationManager NavManager
@inject HttpClient httpClient
@inject IDialogService DialogService


@using System.Text.RegularExpressions

<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6" @ref=Tabs>
@*    	<Header>
            <MudMenu >
    <ChildContent>
    <MudMenuItem OnClick="@( () => RefreshLocation() )">Refresh Location Data</MudMenuItem>
    <MudMenuItem OnClick="@( () => RegisterNew())" >Register Device</MudMenuItem>
    <MudMenuItem OnClick="@( () => DeregisterDevice())" Disabled=@(SelectedDevice == null)>De-Register Device</MudMenuItem>

    <MudMenuItem>Edit Location</MudMenuItem>
    </ChildContent>
</MudMenu>
	</Header>*@
    <ChildContent>
    <MudTabPanel Text=@ThisGroup.Name Style="text-transform: none;">
        <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
            <MudTextField ReadOnly="true" T="string" Label="Description" Text="@ThisGroup.Description" />
            <MudTextField ReadOnly="true" T="DateTime" Label="Last Modified" Value="@ThisGroup.Modified" />


            <MudField Label="Stores" Variant="Variant.Outlined" Class="pt-4">

            @if (ThisGroup.Stores != null)
            {
                foreach(var tag in ThisGroup.Stores.Split(','))
                {
                    <MudChip Variant="Variant.Text">@tag</MudChip>
                }
            }
            </MudField>
        </MudForm>
    </MudTabPanel>
   </ChildContent>
</MudTabs>


@code
{

    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;
    MudTabs Tabs;

    ManagedPower.SDK.Models.API.StoreGroups ThisGroup = new SDK.Models.API.StoreGroups();
    List<ManagedPower.SDK.Models.API.StoreGroups> AllGroups = new List<SDK.Models.API.StoreGroups>();


    protected override async Task OnInitializedAsync()
    {
        AllGroups = await httpClient.GetFromJsonAsync<List<ManagedPower.SDK.Models.API.StoreGroups>>("http://cluw12q05.macsstores.com/managedpower/storegroups/");
        


        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("id", out var groupid))
        {
            var id = Convert.ToInt32(groupid);
            ThisGroup = AllGroups.FirstOrDefault(x => x.Id == id);
             //OpenOverlay(id.ToString());
        }
    }


}